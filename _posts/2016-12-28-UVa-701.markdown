---
layout: post
title:  "UVa 701 - The Archeologists' Dilemma"

date:   2016-12-28 19:20:00 -0600
categories: UVa
---

**Problem:** [The Archeologists' Dilemma]

**Solution:**
Pretty hard problem if the input data is nontrivial. But luckily the test
cases in the judge are pretty simple, so we can just try all the
exponents until we have found one.


**Source Code:**
{% highlight C++ %}
{% raw %}
#include <bits/stdc++.h>

using namespace std;

int main() {
    long long N;
    while (scanf("%lld", &N) == 1) {
        int E = 0;
        double power = 1;

        int digits = 1 + log10(N);
        int hidden_digits = 0;

        while (true) {
            while (power > 1e30) {
                hidden_digits++;
                power /= 10;
            }

            int power_digits = 1 + log10(power);
            long long prefix = power / pow(10, power_digits - digits);
            if (power_digits + hidden_digits > 2 * digits) {
                if (prefix == N)
                    break;
            }

            power *= 2;
            E++;
        }
        printf("%d\n", E);
    }
    return 0;
}
{% endraw %}
{% endhighlight %}

[The Archeologists' Dilemma]:https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=642
