---
layout: post
title:  "POJ - Hardwood Species"
date:   2016-03-20 16:10 -0600
categories: POJ
---

**Problem:** [Hardwood Species]

**Solution:**
A straightforward trie problem. Since the problem does not specify the possible characters for the species name, we have to consider all possibilities, namely, all 256 basic ASCII characters. This means each of our node requires 256 pointers, which is quite memory wasteful. But since memory is not our primary concern here, we can go with this naive implementation.

**Source Code:**
{% highlight C++ %}
#include <cstdio>
#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

class trie{
public:
    trie(){
        root = new trieNode();
        total = 0;
    }

    void insert(const char* str){
        insert(root, str);        
    }
    
    void print(){
        char treeName[35];
        treeName[0] = 0;
        int length = 0;
        print(root, treeName, length);
    }
    
private:
    struct trieNode{
        trieNode(){
            memset(children, 0, sizeof(children));
            count = 0;
        }

        trieNode* children[256];
        size_t  count;
    };

    trieNode* root;
    size_t total;

    void insert(trieNode*& node, const char* str){
        if (!node)
            node = new trieNode();
        if (*str){
            insert(node->children[(int)*str], str + 1);
        }
        else{
            node->count++;
            total++;
        }
    }

    void print(trieNode* node, char* treeName, int length){
        if (node->count)
            printf("%s %.4f\n", treeName, 100.0 * node->count / total);
        else{
            for (size_t i = 0; i < 256; i++)
                if (node->children[i]){
                    treeName[length++] = (char)i;
                    treeName[length] = 0;
                    print(node->children[i], treeName, length);
                    treeName[length--] = 0;
                }
        }
    }
};

int main(){
    char buffer[40];
    trie Trie;
    while (scanf(" %[^\n]", buffer) == 1)
        Trie.insert(buffer);
    Trie.print();
    return 0;
}

{% endhighlight %}

[Hardwood Species]: http://poj.org/problem?id=2418
