---
layout: post
title:  "UVa 11489 - Integer Game"

date:   2017-1-16 14:40:00 -0600
categories: UVa
---

**Problem:** [Integer Game]

**Solution:**
Given the constraint, it should be clear that except the first one,
every other removed digit must be a multiple of 3. So we can 
simply count of number of digits which is a multiple of 3. Also,
we need to test whether it is possible for S to make the initial move.

**Source Code:**
{% highlight C++ %}
{% raw %}
#include <bits/stdc++.h>

using namespace std;

int main(){
    int T;
    cin >> T;
    for (int cases = 1; cases <= T; cases++) {
        string number;
        cin >> number;
        int sum = 0, multiples = 0;
        for (char digit : number) {
            sum += digit - '0';
            if ((digit - '0') % 3 == 0)
                multiples++;
        }

        bool first_possible = false;
        for (char digit : number) {
            if ((sum - (digit - '0')) % 3 == 0) {
                first_possible = true;
                if ((digit - '0') % 3 == 0)
                    multiples--;
                break;
            }
        }

        cout << "Case " << cases << ": ";
        if (!first_possible)
            cout << "T";
        else if (multiples % 2 == 1)
            cout << "T";
        else
            cout << "S";
        printf("\n");
    }
    return 0;
}
{% endraw %}
{% endhighlight %}

[Integer Game]:https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=2484
